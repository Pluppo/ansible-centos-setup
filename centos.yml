---
- name: Centos7 basic setup
  hosts: localhost

  vars:
   - python_version: '3.7.4'

  tasks:

  - name: Upgrade packages (except Ansible)
    yum:
      name: '*'
      state: latest
      exclude: ansible
      update_cache: yes
    become: yes

  - name: Install epel repo
    yum:
      name: epel-release
      state: latest
    become: yes

  - name: Install packages
    yum:
      name:
       # Useful packages
       - wget
       - gcc
       - libcurl
       - yum-cron
       - gzip
       - vim-enhanced
       - htop
       - tree
       - mtr
       - nmap
       - iotop
       - net-tools
       - traceroute
       - yum-cron
       # Packages below are needed for building Python3 from source
       - "@Development tools"
       - libffi-devel
       - zlib-devel
       - bzip2-devel
       - openssl-devel
       - ncurses-devel
       - sqlite-devel
       - readline-devel
       - tk-devel
       - gdbm-devel
       - db4-devel
       - libpcap-devel
       - xz-devel
       - expat-devel
       - postgresql-devel
      state: latest
    become: yes

  - name: Configure yum-cron to apply updates
    lineinfile:
      path: /etc/yum/yum-cron.conf
      state: present
      regexp: '^apply_updates'
      line: 'apply_updates = yes'
    become: yes

  - name: Enable and start yum-cron service
    systemd:
      name: yum-cron
      enabled: yes
      state: started
    become: yes

  - name: Check if Python3 is installed
    command: python3 -V
    ignore_errors: True
    register: python3_installed
    changed_when: False

  - name: Print Python version
    debug:
      var: python3_installed.stdout

  - name: Download and untar Python3 source files
    unarchive:
      src: 'https://www.python.org/ftp/python/{{ python_version }}/Python-{{ python_version }}.tar.xz'
      dest: /usr/src
      remote_src: yes
    become: yes
    when: python3_installed.stdout is not defined

  - name: Configure Python
    command: ./configure --enable-optimizations
    args:
      chdir: '/usr/src/Python-{{ python_version }}'
    become: yes
    when: python3_installed.stdout is not defined

  - name: Install Python
    make:
      chdir: '/usr/src/Python-{{ python_version }}'
      target: altinstall
    become: yes
    when: python3_installed.stdout is not defined

  - name: Clean up source files
    file:
      path: '/usr/src/Python-{{ python_version }}'
      state: absent
    become: yes
    when: python3_installed.stdout is not defined

  - name: Add /usr/local/bin to sudoers path
    lineinfile:
      path: /etc/sudoers
      state: present
      regexp: '^Defaults    secure_path'
      line: 'Defaults    secure_path = /sbin:/bin:/usr/sbin:/usr/bin:/usr/local/bin'
    become: yes

  - name: Check python3 binary version
    find:
      patterns: '^python3\.[0-9]$'
      paths: /usr/local/bin
      use_regex: yes
    register: python_match

  - set_fact:
      python3_version: '{{ python_match.files[0].path }}'

  - name: Create python3 symlink
    file:
      src: '{{ python3_version }}'
      dest: /usr/local/bin/python3
      state: link
    become: yes

  - name: Check if pip3 exists as file
    find:
      patterns: '^pip3$'
      file_type: file
      paths: /usr/local/bin
      use_regex: yes
    register: pip3_exists

  - name: Check pip3 version
    find:
      patterns: '^pip3\.[0-9]$'
      paths: /usr/local/bin
      use_regex: yes
    register: pip_match
    when: pip3_exists.matched == 0

  - name: Set pip3_version variable
    set_fact:
      pip3_version: '{{ pip_match.files[0].path }}'
    when: pip3_exists.matched == 0

  - name: Create pip3 symlink
    file:
      src: '{{ pip3_version }}'
      dest: /usr/local/bin/pip3
      state: link
    become: yes
    when: pip3_exists.matched == 0

  - name: Upgrade pip
    pip:
      name: pip
      executable: pip3
      state: latest
    become: yes

  - name: Install virtualenv
    pip:
      name: virtualenv
      executable: pip3
      state: latest
    become: yes

  - name: Install iPython
    pip:
      name: ipython
      executable: pip3
      state: latest
    become: yes

  - name: Install netmiko
    pip:
      name: netmiko
      executable: pip3
      state: latest
    become: yes

  - name: Install napalm
    pip:
      name: napalm
      executable: pip3
      state: latest
    become: yes

  - name: Clone netmiko_tools (forked to use python3)
    git:
      repo: https://github.com/Pluppo/netmiko_tools.git
      dest: /usr/local/lib/netmiko_tools
    become: yes

  - name: Add netmiko-tools to PATH with /etc/profile.d/path.sh
    template:
      src: ./templates/path.j2
      dest: /etc/profile.d/path.sh
    become: yes

  - name: Clone napaml-ansible
    git:
      repo: https://github.com/napalm-automation/napalm-ansible.git
      dest: /usr/local/lib/napalm-ansible
    become: yes

  - name: Clone ntc-ansible
    git:
      repo: https://github.com/networktocode/ntc-ansible.git
      dest: /usr/local/lib/ntc-ansible
    become: yes

  - name: Install ntc-ansible dependencies
    pip:
      name: ntc-ansible
      executable: pip3
    become: yes

  - name: Clone ntc-templates
    git:
      repo: https://github.com/networktocode/ntc-templates.git
      dest: /usr/local/lib/ntc-templates
    become: yes

  - name: Create ansible group
    group:
      name: ansible
      state: present
    become: yes

  - name: Add ansible group to current user
    user:
      name: "{{ ansible_user_id }}"
      groups: ansible
      append: yes
    become: yes

  - name: Create /var/log/ansible directory
    file:
      path: /var/log/ansible
      state: directory
      mode: '0774'
      group: ansible
    become: yes

  - name: Setup /var/log/ansible/ansible.log logrotate
    template:
      src: ./templates/ansible_log.j2
      dest: /etc/logrotate.d/ansible.conf
    become: yes

  - name: Create ansible-host file
    template:
      src: ./templates/ansible-hosts.j2
      dest: ~/ansible-hosts

  - name: Create ansible.cfg file
    template:
      src: ./templates/ansible-cfg.j2
      dest: /etc/ansible/ansible.cfg
    become: yes

  - name: Upgrade Ansible
    yum:
      name: ansible
      state: latest
    become: yes
